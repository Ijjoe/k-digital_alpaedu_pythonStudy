###9일차

#머신러닝 시작

수학개념 데이터와 행렬 

스칼라 :  방향성없는 숫자
벡터 : 여러숫자로 있는 데이터 레코드


행렬과 벡터 

np.array([0,1,2,3,4,5]) #현재벡터
np.array([[1,2,3],[4,5,6]) #현재행렬

벡터와 벡터 곱셈
내적 : 차원(길이)가 같아야함 / 앞의 백터는 행,뒤의 벡터는 열

일차함수
y= ax + b(a!=0)

이차함수
y= ax^2 (a>0)

미분 : 어떤 함수로부터 그 함수 기울기를 출력하는 새로운 함수만드는 작업
미분라이브러리

import sympy as ss
x=ss.symbols('x')
f= x * ss.exp(x)
print(f)
f_diff = ss.diff(f)
print(f_diff)

###머신러닝에 필요한 확률과 통계

s= np.array([42,69,56,41,57,48,65,49,65,58])
중앙값 과 평균 비슷하면서 다름
비교편차가 큰값이 있을경우 중앙값으로 선택(워렌퍼빗 예시 평균값이 전체로 오름)

np.median(s)
s_df.median()

최빈값 구하기
pd.Series([1,1,1,2,2,3]).mode()

편차 구하기
s= np.array([42,69,56,41,57,48,65,49,65,58])
평균으로부터 얼마나 떨어져있는가

표준편차 : 편차들을 제곱한 값의 합의 평균

#지도학습 데이터 

문제집 : 2차원 행렬
답지 : 1차원 행렬

###K 최근접 이웃 분류 모델
from sklearn.neighbors import KNeighborsClassifier

knn=KNeighborsClassifier()
knn.fit(학습문제집이차원행렬,정답지1차원행렬)
knn.score(학습문제집이차원행렬,정답지1차원행렬)
knn.predict(data)