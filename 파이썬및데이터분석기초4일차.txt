
###내장함수

절대값 : abs()
모두참 : all([1,2,3])
하나라도 참 :any([1,2,3,0])
몫과 나머지 : divmod(7,3) 

리스트,튜플,문자열 위치와 값반환
enumerate(['aa','bb','cc'])

for i,j in enumerate(리스트)

문자열 실행 결과 : eval('1+2')   

참만 추출 개별대입
filter(함수,리스트)  반환처리는 리스트로 담아서 출력반환

주소값반환 : id()
int('11',2 )  11을 2진법으로 표현가능

모든 요소에 함수값 적용
map(함수,리스트)

max() 
min()
pow(2,4) 제곱함수
range()
반올림함수 : round(값 , 자리수)
정렬   : sorted([1,4,5])
str()
sum([1,2,3])

tuple("")
type()

동일한개수 묶어주는 함수 : zip([1],[2])  리스트를 하나로 묶음가능

### 라이브러리

import 라이브러리 [as 변경이름]
from 라이브러리 import 개별함수 [as 변경이름]  

random.randint(1,10)
random.random()
random.sample(데이터값,개수)

random.shuffle(데이터) 무작위 데이터로 변환

calendar.weekday()

변수복사 라이브러리 from copy import copy


pandas 
numpy
tensorflow


### Numpy 소개

import numpy as np

행렬변환 : np.array

arr=np.array([1,2,3]) + 3   행렬시 병렬계산 가능 값더함 가능

arr2=np.array([[1,2,3],[2,3,4]])
print(arr2.shape)


차원확인 : ndim

데이터 타입변환 : astype('float64')
데이터 타입확인 : dtype
행렬 생성 가능 : arange(10)

행렬 변경가능 : reshape

행렬정렬 : np.sort(행렬데이터 , axis=0)
행렬 인덱스 추출 : argsort



### 판다스 개념

파이썬 데이터 분석을 위한 라이브러리(표형태의 데이터 강점)

1.엑셀,csv등 데이터 형식 지원
2.결측치 처리 기능
3.데이터 형태 바꾸기
4.데이터 삭제 및 추가
5.그룹화, 정렬, 결함
6.시계열 데이터
7.문자열 및 날짜/시간지원

import pandas as pd

pd.read_csv("파일이름.csv")

pd.read_csv("파일이름.tsv",sep='\t')

### 시리즈와 데이터프레임

각각의 열 == 시리즈
표 == 데이터프레임

dic={"a":1,"b":2,"c":3}
pd.Series(dic)
a행 1 
b행 2 
c행 3

box=['','','']
pd.Series(box,index=['','',''])

시리즈 행이름 확인
.index
.values 값확인

dic={"이름":['홍','이','아'],
	 "성별":['남','남','여'],
	 "나이":[40,50,20],
}

.DataFrame(dic,index=[],columns=[])


리스트로 데이터프레임

box1=[['','',40],['','',30],['','',20]]
.DataFrame(box1)